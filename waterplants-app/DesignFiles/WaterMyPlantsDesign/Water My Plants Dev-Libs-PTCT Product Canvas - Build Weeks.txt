Proposal
________________


- What problem does your app solve?


        Our app helps people keep track of their watering schedule.


- Be as specific as possible; how does your app solve the problem? mission statement?


Features
________________


- What features are required for your minimum viable product?


1. User can signup/create an account by providing a unique `username`, a valid mobile `phoneNumber` and a `password`. (mobile, web)
2. User can log in to an authenticated session using the credentials provided at account creation/signup.(mobile, web)
3. Authenticated user can Create, Update and Delete a `plant` object. At a minimum, each `plant` must have the following properties (mobile, web):
        - `id`: Integer
        - `nickname`: String
        - `species` : String
        - `h2oFrequency`: Type determined by implementation
        - `image`: optional
4. Authenticated user can view a list of created `plants`. A `plant` can be Deleted or selected to present user with a detail view where user can then update any property of the selected `plant`.(mobile, web)
5. Authenticated user can receive local reminder/notification on their mobile device when when a scheduled `h2oFrequency` is reached. At a minimum, this reminder/notification must display the `nickname` and a short description of the task. (mobile)
6. Authenticated user can update their `phoneNumber` and `password`.


- What features may you wish to put in a future release?
        Plant photo slideshow
        Link to plant’s wiki
- What do the top 3 similar apps do for their users?
Get plant info.
Time Lapse photo of plants growth
Frameworks - Libraries
________________


- What 3rd party frameworks/libraries are you considering using?
Material UI, Axios, Redux, React-router-dom, Thunk, Logger, React-Redux, connected-react-router
- Do APIs require you to contact its maintainer to gain access?
NO
- Are you required to pay to use the API?
NO
- Have you considered using Apple Frameworks? (MapKit, Healthkit, ARKit?)
For Data Scientists
________________




- Describe the Established data source with at least rough data able to be provided on day 1. 
- You can gather information about the data set you’ll be working with from the project description. Be sure to collaborate with your PM, and your Backend Architect to chat about the resources you have.
- Write a description for what the DS problem is (what uncertainty/prediction are we trying to do here? Sentiment analysis? Why is this a useful solution to a problem?)
- A target (e.g. JSON format or such) for output that DS students can deliver to web/other students for them to ingest and use in the app


Target Audience
________________


- Who is your target audience? Be specific.
        Gardeners, people with house plants.
- What feedback have you gotten from potential users?
How will notifications work?
- Have you validated the problem and your solution with your target audience? How?
We think we have solved this by adding a dropdown menu on the dashboard page that displays plants in need of watering.


Research
________________


- Research thoroughly before writing a single line of code. Solidify the features of your app conceptually before implementation. Spend the weekend researching so you can hit the ground running on Monday.
Prototype Key Feature(s)
________________


- This is the “bread and butter” of the app, this is what makes your app yours. Calculate how long it takes to implement these features and triple the time estimated. That way you’ll have plenty of time to finish. It is preferred to drop features and spend more time working on your MVP features if needed.


0 Redux


1 Login page
2 Register page


3 Dashboard
-Notification drop down
3.5 SideNav


4 Add Plant
-water time works with unix time


5  Edit plant 
-water time


6 Plant Card


7 Delete plant